基本功能要求
遵循之前定义的 RESTful APIs：你需要基于 Assignment 1 中定义的 RESTful API 接口来开发这个系统。
使用 Java 和 Spring WebFlux API 实现 API：采用反应式编程方法实现非阻塞 API。
实现反应式服务层和数据访问层 (DAO)：整个后端结构应支持反应式操作，以提高性能和响应速度。
测试：使用 Spring Boot 的测试框架和 WebClient/WebTestClient 进行应用测试，确保所有功能按预期工作。
API 认证：使用 Spring Security 和 JSON Web Tokens (JWT) 实现安全的 API 认证，这将作为额外加分项。
附加功能（额外积分项）
缓存：实现缓存机制，提高数据处理速度和响应时间。
会话控制：管理用户会话，保证系统安全性和操作的一致性。
日志记录：实现详细的日志系统，方便问题跟踪和系统监控。
速率限制：控制 API 的请求频率，避免过度使用和潜在的服务拒绝攻击。
交付内容
项目源代码和测试截图归档：将项目的全部源代码以及运行和测试的截图打包，上传到如 GitHub 或 Gitee 的代码仓库。
提供报告：编写一份详尽的报告，描述项目的设计、实现细节和测试结果。
提交截止日期：2024年5月31日